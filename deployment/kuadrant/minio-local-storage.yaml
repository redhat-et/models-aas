# MinIO for local S3-compatible storage in minikube
---
apiVersion: v1
kind: Namespace
metadata:
  name: minio-system
---
# PersistentVolumeClaim for MinIO data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: minio-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: standard
---
# MinIO deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: minio-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio:latest
        args:
        - server
        - /data
        - --console-address
        - ":9001"
        env:
        - name: MINIO_ROOT_USER
          value: "minioadmin"
        - name: MINIO_ROOT_PASSWORD
          value: "minioadmin"
        - name: MINIO_BROWSER_REDIRECT_URL
          value: "http://localhost:9001"
        ports:
        - containerPort: 9000
          name: api
        - containerPort: 9001
          name: console
        volumeMounts:
        - name: data
          mountPath: /data
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 30
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: minio-pvc
---
# MinIO Service
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: minio-system
spec:
  selector:
    app: minio
  ports:
  - name: api
    port: 9000
    targetPort: 9000
  - name: console
    port: 9001
    targetPort: 9001
  type: ClusterIP
---
# MinIO Secret for access
apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
  namespace: llm
type: Opaque
stringData:
  AWS_ACCESS_KEY_ID: "minioadmin"
  AWS_SECRET_ACCESS_KEY: "minioadmin"
  AWS_S3_ENDPOINT: "http://minio.minio-system.svc.cluster.local:9000"
  AWS_DEFAULT_REGION: "us-east-1"
---
# ConfigMap for MinIO setup script
apiVersion: v1
kind: ConfigMap
metadata:
  name: minio-setup
  namespace: minio-system
data:
  setup.sh: |
    #!/bin/bash
    # Create models bucket in MinIO
    mc alias set local http://minio.minio-system.svc.cluster.local:9000 minioadmin minioadmin
    mc mb local/models --ignore-existing
    echo "MinIO setup complete - models bucket created"
---
# Job to setup MinIO buckets
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-setup
  namespace: minio-system
spec:
  template:
    spec:
      containers:
      - name: setup
        image: minio/mc:latest
        command: ["/bin/bash"]
        args: ["-c", "/scripts/setup.sh"]
        volumeMounts:
        - name: scripts
          mountPath: /scripts
      volumes:
      - name: scripts
        configMap:
          name: minio-setup
          defaultMode: 0755
      restartPolicy: OnFailure
  backoffLimit: 3